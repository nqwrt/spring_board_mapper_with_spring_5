<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    
	<http> 
		<intercept-url pattern="/security/all" access="permitAll" />
		<intercept-url pattern="/security/member" access="hasRole('ROLE_MEMBER')" />  
		<intercept-url pattern="/security/admin" access="hasRole('ROLE_ADMIN')" />  
				
<!-- 	login-page: 로그인 페이지 주소를 지정
		username-parameter: 로그인 페이지 form에 있는 username을 저장한 변수이름 지정
		password-parameter: 로그인 페이지 form에 있는 password을 저장한 변수이름 지정 
		login-processing-url: 로그인 페이지 form action에 입력할 주소 지정
		default-target-url: 로그인 성공인 경우 호출할 주소 지정
		authentication-failure-url : 로그인 실패인 경우 호출할 주소 지정 -->
		
		<form-login login-page="/security/login/loginForm" 
                    default-target-url="/security/"
                    authentication-failure-url="/login/loginForm?error"
                    username-parameter="id"
                    password-parameter="password" />
		
		<!-- 403 에러 처리 -->
		<access-denied-handler error-page="/security/accessError"/>
	</http> 
	
	<!-- provider --> 
	<authentication-manager>
		<authentication-provider> 
			<user-service> 
				<user name="member" password="{noop}member" authorities="ROLE_MEMBER" /> 
				<user name="admin" password="{noop}admin" authorities="ROLE_MEMBER,ROLE_ADMIN" /> 
			</user-service> 
		</authentication-provider>
	</authentication-manager>
    
    
</beans:beans>
